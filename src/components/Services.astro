---
import { promises as fs } from 'fs';
import path from 'path';
import type { ServiceContent, Package } from '../content/types';
import { formatText } from '../utils/textFormatter';

// Leer el contenido dinámicamente
const servicesPath = path.join(process.cwd(), 'src/content/services.json');
const servicesFile = await fs.readFile(servicesPath, 'utf-8');
const content = JSON.parse(servicesFile) as ServiceContent;

const { title, subtitle, toggle, packages, individualServices } = content;
---

<section id="servicios" class="py-20 md:py-32 bg-background-alt section-fade-in">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center">
      <h2 class="text-3xl md:text-4xl font-extrabold text-foreground">{title}</h2>
      <p class="mt-4 max-w-2xl mx-auto text-lg text-foreground/80" set:html={formatText(subtitle)}></p>
    </div>

    <div class="mt-12 flex justify-center space-x-2 md:space-x-4 bg-foreground/10 p-2 rounded-full max-w-sm mx-auto">
      <button id="toggle-paquetes" class="w-full py-2 px-4 rounded-full text-sm md:text-base font-semibold transition active-toggle">
        {toggle.packages}
      </button>
      <button id="toggle-individuales" class="w-full py-2 px-4 rounded-full text-sm md:text-base font-semibold transition text-foreground/80">
        {toggle.individual}
      </button>
    </div>

    <div id="paquetes-container" class="mt-16">
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {packages.map((pkg: Package, index: number) => (
          <div class:list={[
            "p-8 rounded-2xl shadow-lg transform hover:scale-105 transition-all duration-300",
            index === 1 
              ? "bg-gradient-brand text-primary-foreground ring-4 ring-offset-2 ring-primary" 
              : "bg-background-secondary border border-foreground/10"
          ]}>
            <h3 class="text-2xl font-bold">{pkg.title}</h3>
            <p class:list={["mt-4", { "opacity-90": index === 1, "text-foreground/80": index !== 1 }]} set:html={formatText(pkg.description)}>
            </p>
            <ul class:list={["mt-6 space-y-3", { "text-foreground/90": index !== 1 }]}>
              {pkg.features.map((feature: string) => (
                <li class="flex items-center">
                  <span class:list={["mr-3", { "text-primary": index !== 1 }]}>✔</span><span set:html={formatText(feature)}></span>
                </li>
              ))}
            </ul>
            <a href="#contacto" class:list={[
              "mt-8 block w-full text-center font-bold py-3 px-6 rounded-lg transition-colors",
              index === 1 
                ? "bg-background text-primary hover:bg-background/90" 
                : "bg-primary text-primary-foreground hover:bg-primary/90"
            ]}>
              {pkg.cta}
            </a>
          </div>
        ))}
      </div>
    </div>
    
    <div id="individuales-container" class="mt-16 hidden">
      <div class="grid sm:grid-cols-2 lg:grid-cols-4 gap-8" id="services-grid">
        <!-- Services will be dynamically loaded here -->
      </div>
    </div>
  </div>
</section>


<script is:inline define:vars={{ services: individualServices }}>
  document.addEventListener('DOMContentLoaded', function () {
    const togglePaquetes = document.getElementById('toggle-paquetes');
    const toggleIndividuales = document.getElementById('toggle-individuales');
    const paquetesContainer = document.getElementById('paquetes-container');
    const individualesContainer = document.getElementById('individuales-container');
    const servicesGrid = document.getElementById('services-grid');

    // Función helper para formatear texto
    function formatText(text) {
      if (!text) return '';
      // Convertir saltos de línea a <br>
      let formatted = text.replace(/\n/g, '<br>');
      // Convertir **texto** a <strong>texto</strong>
      formatted = formatted.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
      return formatted;
    }

    function renderIndividualServices() {
      if (!servicesGrid) return;
      servicesGrid.innerHTML = '';
      services.forEach((service) => {
        const serviceCard = document.createElement('div');
        serviceCard.className = `bg-background p-6 rounded-xl shadow-md hover:shadow-xl transition-shadow border border-foreground/10 text-center ${service.type === 'ia-special' ? 'bg-secondary/10 border-2 border-secondary' : ''}`;
        serviceCard.innerHTML = `
          <h3 class="text-xl font-bold ${service.type === 'ia-special' ? 'text-secondary' : 'text-foreground'}">${service.title}</h3>
          <p class="mt-2 text-sm ${service.type === 'ia-special' ? 'text-secondary' : 'text-foreground/80'}">${formatText(service.description)}</p>
          ${service.type === 'ia-special' ? 
            `<a href="/sin-camara" class="mt-4 inline-block text-secondary hover:text-secondary/90 font-semibold">${service.cta}</a>` :
            `<a href="#contacto" class="mt-4 inline-block text-primary hover:text-primary/90 font-semibold">${service.cta}</a>`
          }
        `;
        servicesGrid.appendChild(serviceCard);
      });
    }

    togglePaquetes?.addEventListener('click', () => {
      paquetesContainer?.classList.remove('hidden');
      individualesContainer?.classList.add('hidden');
      togglePaquetes?.classList.add('active-toggle');
      toggleIndividuales?.classList.remove('active-toggle');
      toggleIndividuales?.classList.add('text-foreground/80');
    });

    toggleIndividuales?.addEventListener('click', () => {
      individualesContainer?.classList.remove('hidden');
      paquetesContainer?.classList.add('hidden');
      toggleIndividuales?.classList.add('active-toggle');
      toggleIndividuales?.classList.remove('text-foreground/80');
      togglePaquetes?.classList.remove('active-toggle');
      renderIndividualServices();
    });

    togglePaquetes?.click();
  });
</script> 