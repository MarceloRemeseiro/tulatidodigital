---
interface Props {
	title: string;
	description?: string;
}

import ThemeToggle from '../components/ThemeToggle.astro';

const { 
	title, 
	description = "Tu Latido Digital - Agencia de Marketing Digital especializada en Copywriting, Community Management y Media Buying" 
} = Astro.props;
const isAdminPage = Astro.url.pathname.startsWith('/admin');
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="bg-background text-foreground">
		<div class="fixed top-4 right-4 z-50 flex items-center gap-4">
			<slot name="page-actions" />
			{isAdminPage && <ThemeToggle />}
		</div>
		<slot />
		<style is:global>
			:root {
				--background: 48 10% 95%; /* stone-100 */
				--foreground: 240 10% 3.9%; /* slate-950 */
				--card: 0 0% 100%;
				--card-foreground: 240 10% 3.9%;
				--popover: 0 0% 100%;
				--popover-foreground: 240 10% 3.9%;
				--primary: 252 82% 65%; /* violet-600 */
				--primary-foreground: 10 40% 98%; /* stone-50 */
				--secondary: 316 68% 63%; /* fuchsia-600 */
				--secondary-foreground: 10 40% 98%;
				--muted: 240 4.8% 95.9%;
				--muted-foreground: 240 3.8% 46.1%;
				--accent: 240 4.8% 95.9%;
				--accent-foreground: 240 5.9% 10%;
				--destructive: 0 84.2% 60.2%;
				--destructive-foreground: 10 40% 98%;
				--border: 240 5.9% 90%;
				--input: 240 5.9% 90%;
				--ring: 252, 82%, 65%;
				--radius: 0.5rem;
			}

			[data-theme="dark"] {
				--background: 240 10% 3.9%; /* slate-950 */
				--foreground: 10 40% 98%; /* stone-50 */
				--card: 240 10% 3.9%;
				--card-foreground: 10 40% 98%;
				--popover: 240 10% 3.9%;
				--popover-foreground: 10 40% 98%;
				--primary: 252 82% 65%;
				--primary-foreground: 240 10% 3.9%;
				--secondary: 316 68% 63%;
				--secondary-foreground: 240 10% 3.9%;
				--muted: 240 3.7% 15.9%;
				--muted-foreground: 240 5% 64.9%;
				--accent: 240 3.7% 15.9%;
				--accent-foreground: 10 40% 98%;
				--destructive: 0 62.8% 30.6%;
				--destructive-foreground: 10 40% 98%;
				--border: 240 3.7% 15.9%;
				--input: 240 3.7% 15.9%;
				--ring: 252, 82%, 65%;
			}

			html {
				scroll-behavior: smooth;
			}

			body {
				font-family: 'Poppins', sans-serif;
			}

			.bg-stripes-texture {
				background-color: hsl(var(--background));
				background-image: repeating-linear-gradient(
					45deg,
					hsl(var(--foreground) / 0.02),
					hsl(var(--foreground) / 0.02) 2px,
					transparent 2px,
					transparent 20px
				);
			}

			.section-fade-in {
				opacity: 0;
				transform: translateY(20px);
				transition: opacity 0.6s ease-out, transform 0.6s ease-out;
			}

			.section-fade-in.visible {
				opacity: 1;
				transform: translateY(0);
			}

			.active-toggle {
				background-color: hsl(var(--primary));
				color: hsl(var(--primary-foreground));
			}

			.modal {
				transition: opacity 0.25s ease;
			}
		</style>
		<script>
			const intersectionObserver = new IntersectionObserver((entries) => {
				entries.forEach((entry) => {
					if (entry.isIntersecting) {
						entry.target.classList.add('visible');
					}
				});
			});

			document.querySelectorAll('.section-fade-in').forEach((section) => {
				intersectionObserver.observe(section);
			});
		</script>
	</body>
</html> 